<?php

declare(strict_types=1);

/*
 * TESTAREAAPISERVICELib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TESTAREAAPISERVICELib\Models;

use stdClass;

class Invoice implements \JsonSerializable
{
    /**
     * @var string
     */
    private $description;

    /**
     * @var int
     */
    private $carton;

    /**
     * @var float
     */
    private $cbm;

    /**
     * @var int
     */
    private $pricePerCbm;

    /**
     * @var int
     */
    private $total;

    /**
     * @param string $description
     * @param int $carton
     * @param float $cbm
     * @param int $pricePerCbm
     * @param int $total
     */
    public function __construct(string $description, int $carton, float $cbm, int $pricePerCbm, int $total)
    {
        $this->description = $description;
        $this->carton = $carton;
        $this->cbm = $cbm;
        $this->pricePerCbm = $pricePerCbm;
        $this->total = $total;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Carton.
     */
    public function getCarton(): int
    {
        return $this->carton;
    }

    /**
     * Sets Carton.
     *
     * @required
     * @maps carton
     */
    public function setCarton(int $carton): void
    {
        $this->carton = $carton;
    }

    /**
     * Returns Cbm.
     */
    public function getCbm(): float
    {
        return $this->cbm;
    }

    /**
     * Sets Cbm.
     *
     * @required
     * @maps cbm
     */
    public function setCbm(float $cbm): void
    {
        $this->cbm = $cbm;
    }

    /**
     * Returns Price Per Cbm.
     */
    public function getPricePerCbm(): int
    {
        return $this->pricePerCbm;
    }

    /**
     * Sets Price Per Cbm.
     *
     * @required
     * @maps price_per_cbm
     */
    public function setPricePerCbm(int $pricePerCbm): void
    {
        $this->pricePerCbm = $pricePerCbm;
    }

    /**
     * Returns Total.
     */
    public function getTotal(): int
    {
        return $this->total;
    }

    /**
     * Sets Total.
     *
     * @required
     * @maps total
     */
    public function setTotal(int $total): void
    {
        $this->total = $total;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return mixed
     */
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['description']   = $this->description;
        $json['carton']        = $this->carton;
        $json['cbm']           = $this->cbm;
        $json['price_per_cbm'] = $this->pricePerCbm;
        $json['total']         = $this->total;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
