<?php
/*
 * TESTAREAAPISERVICELib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TESTAREAAPISERVICELib\Tests;

use TESTAREAAPISERVICELib\Exceptions\ApiException;
use TESTAREAAPISERVICELib\Exceptions;
use TESTAREAAPISERVICELib\ApiHelper;
use TESTAREAAPISERVICELib\Models;
use PHPUnit\Framework\TestCase;

class BannerManagementControllerTest extends TestCase
{
    /**
     * @var \TESTAREAAPISERVICELib\Controllers\BannerManagementController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getBannerManagementController();
    }


    /**
     * Todo Add description for test testIndexBanner
     */
    public function testIndexBanner()
    {
        // Parameters for the API call
        $accept = '*/*';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->indexBanner($accept);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testCreateBanner
     */
    public function testCreateBanner()
    {
        // Parameters for the API call
        $accept = 'application/json';
        $token = '8c303dbdca6fea482c31faef051ff5591a77579d02315c6b3046d72984c25a21ab781c75ef9dce66';
        $title = 'contoh banner';
        $subtitle = 'ini contoh banner';
        $image = '';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->createBanner($accept, $token, $title, $subtitle, $image);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testUpdateBanner
     */
    public function testUpdateBanner()
    {
        // Parameters for the API call
        $accept = 'application/json';
        $xHttpMethodOverride = 'patch';
        $token = 'f447d64e2ab84708bace0e966c58dd5bda80e52cf55d1aff6272323e7d0acf7b5308324fe707cd5c';
        $title = 'contoh banner update lagi euy';
        $subtitle = 'ini contoh banner';
        $image = '';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->updateBanner($accept, $xHttpMethodOverride, $token, $title, $subtitle, $image);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testRestoreBanner
     */
    public function testRestoreBanner()
    {
        // Parameters for the API call
        $xHttpMethodOverride = 'patch';
        $token = 'f447d64e2ab84708bace0e966c58dd5bda80e52cf55d1aff6272323e7d0acf7b5308324fe707cd5c';
        $accept = '*/*';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->restoreBanner($xHttpMethodOverride, $token, $accept);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testDeleteBanner
     */
    public function testDeleteBanner()
    {
        // Parameters for the API call
        $accept = 'application/json';
        $token = 'f447d64e2ab84708bace0e966c58dd5bda80e52cf55d1aff6272323e7d0acf7b5308324fe707cd5c';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->deleteBanner($accept, $token);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testImageBanner
     */
    public function testImageBanner()
    {
        // Parameters for the API call
        $accept = 'application/json';
        $token = 'f447d64e2ab84708bace0e966c58dd5bda80e52cf55d1aff6272323e7d0acf7b5308324fe707cd5c';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->imageBanner($accept, $token);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
