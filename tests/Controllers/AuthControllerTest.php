<?php
/*
 * TESTAREAAPISERVICELib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TESTAREAAPISERVICELib\Tests;

use TESTAREAAPISERVICELib\Exceptions\ApiException;
use TESTAREAAPISERVICELib\Exceptions;
use TESTAREAAPISERVICELib\ApiHelper;
use TESTAREAAPISERVICELib\Models;
use PHPUnit\Framework\TestCase;

class AuthControllerTest extends TestCase
{
    /**
     * @var \TESTAREAAPISERVICELib\Controllers\AuthController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getAuthController();
    }


    /**
     * Todo Add description for test testRegister
     */
    public function testRegister()
    {
        // Parameters for the API call
        $accept = '*/*';
        $email = 'admin@mail';
        $name = 'admin';
        $password = 'admin';
        $passwordConfirmation = 'admin';
        $role = 'admin';
        $gender = 'male';
        $address = 'admin address';
        $username = 'admin123';
        $telephone = '08123456789010';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->register($accept, $email, $name, $password, $passwordConfirmation, $role, $gender, $address, $username, $telephone);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testLogout
     */
    public function testLogout()
    {
        // Parameters for the API call
        $token = 'f47ea6194bc92f57cb1138b043a389167591be763048f22fdfb79f0de7bb3e481fc2fb896c29b6c8';
        $accept = '*/*';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->logout($token, $accept);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testResetPassword
     */
    public function testResetPassword()
    {
        // Parameters for the API call
        $accept = '*/*';
        $email = 'iilmaulana04@gmail.com';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->resetPassword($accept, $email);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testChangePassword
     */
    public function testChangePassword()
    {
        // Parameters for the API call
        $accept = '*/*';
        $password = 1234;
        $passwordConfirmation = 1234;

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->changePassword($accept, $password, $passwordConfirmation);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testLogin
     */
    public function testLogin()
    {
        // Parameters for the API call
        $accept = '*/*';
        $email = 'iilmaulana04@gmail.com';
        $password = 'ilham123';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->login($accept, $email, $password);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
