<?php
/*
 * TESTAREAAPISERVICELib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TESTAREAAPISERVICELib\Tests;

use TESTAREAAPISERVICELib\Exceptions\ApiException;
use TESTAREAAPISERVICELib\Exceptions;
use TESTAREAAPISERVICELib\ApiHelper;
use TESTAREAAPISERVICELib\Models;
use PHPUnit\Framework\TestCase;

class DeliveryProofControllerTest extends TestCase
{
    /**
     * @var \TESTAREAAPISERVICELib\Controllers\DeliveryProofController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getDeliveryProofController();
    }


    /**
     * Todo Add description for test testIndexDeliveryProof
     */
    public function testIndexDeliveryProof()
    {
        // Parameters for the API call
        $accept = '*/*';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->indexDeliveryProof($accept);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testUploadDeliveryProof
     */
    public function testUploadDeliveryProof()
    {
        // Parameters for the API call
        $accept = '*/*';
        $packageId = 1;
        $image1 = '';
        $image2 = '';
        $recipientName = 'ilham';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->uploadDeliveryProof($accept, $packageId, $image1, $image2, $recipientName);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testImage1DeliveryProof
     */
    public function testImage1DeliveryProof()
    {
        // Parameters for the API call
        $name = 'delivery_proof_1_MIMO-000001.jpg';
        $accept = '*/*';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->image1DeliveryProof($name, $accept);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testImage2DeliveryProof
     */
    public function testImage2DeliveryProof()
    {
        // Parameters for the API call
        $name = 'delivery_proof_2_MIMO-000001.jpg';
        $accept = '*/*';

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->image2DeliveryProof($name, $accept);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
